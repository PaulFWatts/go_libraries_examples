package templates

import "fmt"

type User struct {
	ID    int    `json:"id"`
	Name  string `json:"name"`
	Email string `json:"email"`
	Role  string `json:"role"`
}

templ Components() {
	@Base("Components - Templ Demo") {
		<div class="container py-5">
			<div class="row">
				<div class="col-lg-12">
					<h1 class="display-4 mb-4">Component Library</h1>
					<p class="lead mb-5">
						Explore reusable Templ components with different variants and props.
					</p>
				</div>
			</div>

			<!-- Buttons Section -->
			<section class="mb-5">
				<h2 class="h3 mb-4">Buttons</h2>
				<div class="row g-3 mb-4">
					<div class="col-auto">
						@Button("Primary", "primary", "")
					</div>
					<div class="col-auto">
						@Button("Secondary", "secondary", "")
					</div>
					<div class="col-auto">
						@Button("Success", "success", "")
					</div>
					<div class="col-auto">
						@Button("Danger", "danger", "")
					</div>
					<div class="col-auto">
						@Button("Warning", "warning", "")
					</div>
					<div class="col-auto">
						@Button("Info", "info", "")
					</div>
					<div class="col-auto">
						@Button("Light", "light", "")
					</div>
					<div class="col-auto">
						@Button("Dark", "dark", "")
					</div>
				</div>
				<div class="code-block">
					<h6>Usage:</h6>
					<pre><code class="language-go">// Button component definition
templ Button(text string, variant string, onclick string) {
  &lt;button class={ "btn", "btn-" + variant } onclick?={ onclick }&gt;
    { text }
  &lt;/button&gt;

// Usage
@Button("Click Me", "primary", "alert('Hello!')")</code></pre>
				</div>
			</section>

			<!-- Cards Section -->
			<section class="mb-5">
				<h2 class="h3 mb-4">Cards</h2>
				<div class="row g-4 mb-4">
					<div class="col-lg-4">
						@Card(
							"Component Architecture",
							"Build reusable UI components with props and conditional rendering.",
							"Learn More",
							"primary",
						)
					</div>
					<div class="col-lg-4">
						@Card(
							"Type Safety",
							"Catch template errors at compile time, not runtime.",
							"Explore",
							"success",
						)
					</div>
					<div class="col-lg-4">
						@Card(
							"Performance",
							"Templates compile to efficient Go code for maximum speed.",
							"Benchmark",
							"info",
						)
					</div>
				</div>
				<div class="code-block">
					<h6>Card Component:</h6>
					<pre><code class="language-go">templ Card(title, body, buttonText, buttonVariant string) {
  &lt;div class="card h-100"&gt;
    &lt;div class="card-body"&gt;
      &lt;h5 class="card-title"&gt;{ title }&lt;/h5&gt;
      &lt;p class="card-text"&gt;{ body }&lt;/p&gt;
      @Button(buttonText, buttonVariant, "")
    &lt;/div&gt;
  &lt;/div&gt;
}</code></pre>
				</div>
			</section>

			<!-- Alerts Section -->
			<section class="mb-5">
				<h2 class="h3 mb-4">Alerts</h2>
				<div class="mb-4">
					@Alert("success", "Success!", "Operation completed successfully.")
					@Alert("info", "Information", "Here's some helpful information.")
					@Alert("warning", "Warning!", "Please review your input.")
					@Alert("danger", "Error!", "Something went wrong.")
				</div>
				<div class="code-block">
					<h6>Alert Component:</h6>
					<pre><code class="language-go">templ Alert(variant, title, message string) {
  &lt;div class={ "alert", "alert-" + variant, "alert-dismissible", "fade", "show" }&gt;
    &lt;strong&gt;{ title }&lt;/strong&gt; { message }
    &lt;button type="button" class="btn-close" data-bs-dismiss="alert"&gt;&lt;/button&gt;
  &lt;/div&gt;
}</code></pre>
				</div>
			</section>

			<!-- Forms Section -->
			<section class="mb-5">
				<h2 class="h3 mb-4">Forms</h2>
				<div class="row">
					<div class="col-lg-6 mb-4">
						@ContactForm()
					</div>
					<div class="col-lg-6">
						<div class="code-block">
							<h6>Form Component:</h6>
							<pre><code class="language-go">templ ContactForm() {
  &lt;form class="card p-4"&gt;
    &lt;h5 class="card-title mb-3"&gt;Contact Us&lt;/h5&gt;
    @FormField("name", "text", "Name", "Enter your name", true)
    @FormField("email", "email", "Email", "your@email.com", true)
    @FormField("message", "textarea", "Message", "Your message...", false)
    @Button("Send Message", "primary", "")
  &lt;/form&gt;
}</code></pre>
						</div>
					</div>
				</div>
			</section>

			<!-- Data Display Section -->
			<section class="mb-5">
				<h2 class="h3 mb-4">Data Display</h2>
				<div class="mb-4">
					@UserTable([]User{
						{ID: 1, Name: "Alice Johnson", Email: "alice@example.com", Role: "Admin"},
						{ID: 2, Name: "Bob Smith", Email: "bob@example.com", Role: "User"},
						{ID: 3, Name: "Carol Davis", Email: "carol@example.com", Role: "Editor"},
						{ID: 4, Name: "David Wilson", Email: "david@example.com", Role: "User"},
					})
				</div>
				<div class="code-block">
					<h6>Table Component:</h6>
					<pre><code class="language-go">templ UserTable(users []User) {
  &lt;div class="table-responsive"&gt;
    &lt;table class="table table-striped"&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;ID&lt;/th&gt;
          &lt;th&gt;Name&lt;/th&gt;
          &lt;th&gt;Email&lt;/th&gt;
          &lt;th&gt;Role&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        for _, user := range users {
          @UserRow(user)
        }
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/div&gt;
}</code></pre>
				</div>
			</section>
		</div>
	}
}

templ Button(text, variant, onclick string) {
	<button 
		class={ "btn", "btn-" + variant }
		if onclick != "" {
			onclick={ onclick }
		}
	>
		{ text }
	</button>
}

templ Card(title, body, buttonText, buttonVariant string) {
	<div class="card h-100">
		<div class="card-body">
			<h5 class="card-title">{ title }</h5>
			<p class="card-text">{ body }</p>
			@Button(buttonText, buttonVariant, "")
		</div>
	</div>
}

templ Alert(variant, title, message string) {
	<div class={ "alert", "alert-" + variant, "alert-dismissible", "fade", "show" }>
		<strong>{ title }</strong> { message }
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

templ ContactForm() {
	<form class="card p-4" action="/contact" method="post">
		<h5 class="card-title mb-3">Contact Us</h5>
		@FormField("name", "text", "Name", "Enter your name", true)
		@FormField("email", "email", "Email", "your@email.com", true)
		@FormField("message", "textarea", "Message", "Your message...", false)
		<div class="mt-3">
			@Button("Send Message", "primary", "")
		</div>
	</form>
}

templ FormField(name, fieldType, label, placeholder string, required bool) {
	<div class="mb-3">
		<label for={ name } class="form-label">
			{ label }
			if required {
				<span class="text-danger">*</span>
			}
		</label>
		if fieldType == "textarea" {
			<textarea 
				class="form-control" 
				id={ name } 
				name={ name } 
				placeholder={ placeholder }
				if required {
					required
				}
				rows="4"
			></textarea>
		} else {
			<input 
				type={ fieldType }
				class="form-control" 
				id={ name } 
				name={ name } 
				placeholder={ placeholder }
				if required {
					required
				}
			/>
		}
	</div>
}

templ UserTable(users []User) {
	<div class="table-responsive">
		<table class="table table-striped table-hover">
			<thead class="table-dark">
				<tr>
					<th>ID</th>
					<th>Name</th>
					<th>Email</th>
					<th>Role</th>
					<th>Actions</th>
				</tr>
			</thead>
			<tbody>
				for _, user := range users {
					@UserRow(user)
				}
			</tbody>
		</table>
	</div>
}

templ UserRow(user User) {
	<tr>
		<td>{ fmt.Sprintf("%d", user.ID) }</td>
		<td>{ user.Name }</td>
		<td>{ user.Email }</td>
		<td>
			<span class={ "badge", getBadgeClass(user.Role) }>
				{ user.Role }
			</span>
		</td>
		<td>
			<div class="btn-group btn-group-sm">
				@Button("Edit", "outline-primary", "")
				@Button("Delete", "outline-danger", "")
			</div>
		</td>
	</tr>
}

func getBadgeClass(role string) string {
	switch role {
	case "Admin":
		return "bg-danger"
	case "Editor":
		return "bg-warning"
	case "User":
		return "bg-primary"
	default:
		return "bg-secondary"
	}
}
