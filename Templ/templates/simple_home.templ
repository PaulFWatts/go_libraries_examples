package templates

templ HomePage() {
	<!DOCTYPE html>
	<html lang="en">
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<title>Templ Demo - Type-safe HTML Templates</title>
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"/>
		<style>
			.hero-section {
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				color: white;
				padding: 4rem 0;
			}
			.feature-card {
				transition: transform 0.2s ease-in-out;
				border: none;
				box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
			}
			.feature-card:hover {
				transform: translateY(-5px);
				box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
			}
		</style>
	</head>
	<body>
		<nav class="navbar navbar-expand-lg navbar-dark bg-primary">
			<div class="container">
				<a class="navbar-brand" href="/">
					<strong>Templ Demo</strong>
				</a>
				<div class="navbar-nav ms-auto">
					<a class="nav-link" href="/">Home</a>
					<a class="nav-link" href="/components">Components</a>
					<a class="nav-link" href="/todo">Todo App</a>
					<a class="nav-link" href="/users">Users</a>
				</div>
			</div>
		</nav>
		
		<!-- Hero Section -->
		<section class="hero-section">
			<div class="container">
				<div class="row align-items-center">
					<div class="col-lg-6">
						<h1 class="display-4 fw-bold mb-4">
							Welcome to Templ
						</h1>
						<p class="lead mb-4">
							A language for writing HTML user interfaces in Go that compiles to type-safe Go code.
							Experience the power of compile-time HTML validation and Go's type system.
						</p>
						<div class="d-flex gap-3">
							<a href="/components" class="btn btn-light btn-lg">
								View Components
							</a>
							<a href="/todo" class="btn btn-outline-light btn-lg">
								Try Todo App
							</a>
						</div>
					</div>
					<div class="col-lg-6">
						<div class="bg-dark text-white p-4 rounded">
							<h5>Template Example</h5>
							<p>Templ allows you to write type-safe HTML templates in Go with compile-time validation.</p>
						</div>
					</div>
				</div>
			</div>
		</section>

		<!-- Features Section -->
		<section class="py-5">
			<div class="container">
				<div class="row text-center mb-5">
					<div class="col-lg-12">
						<h2 class="display-5 fw-bold">Why Choose Templ?</h2>
						<p class="lead text-muted">Modern templating with Go's safety and performance</p>
					</div>
				</div>
				<div class="row g-4">
					<div class="col-lg-4">
						<div class="card feature-card h-100 text-center p-4">
							<div class="card-body">
								<div class="display-4 mb-3">ðŸ”’</div>
								<h5 class="card-title fw-bold">Type Safety</h5>
								<p class="card-text text-muted">Compile-time validation ensures your templates are always correct.</p>
							</div>
						</div>
					</div>
					<div class="col-lg-4">
						<div class="card feature-card h-100 text-center p-4">
							<div class="card-body">
								<div class="display-4 mb-3">âš¡</div>
								<h5 class="card-title fw-bold">High Performance</h5>
								<p class="card-text text-muted">Templates compile to efficient Go code. No parsing overhead at runtime.</p>
							</div>
						</div>
					</div>
					<div class="col-lg-4">
						<div class="card feature-card h-100 text-center p-4">
							<div class="card-body">
								<div class="display-4 mb-3">ðŸ§©</div>
								<h5 class="card-title fw-bold">Component Based</h5>
								<p class="card-text text-muted">Build reusable components with props, just like modern frontend frameworks.</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		
		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
	</body>
	</html>
}
